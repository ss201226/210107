--테이블 수정
--컬럼추가
ALTER TABLE FLOWER 
ADD (
	FLOWERNUM NUMBER(3)
);
SELECT * FROM FLOWER;


--컬럼 수정
ALTER TABLE FLOWER
MODIFY(
	FLOWERNUM VARCHAR2(20)
);
--컬럼이름변경
ALTER TABLE FLOWER RENAME COLUMN FLOWERNUM TO FLOWERKEY;

--컬럼삭제
ALTER TABLE FLOWER DROP COLUMN FLOWERKEY;

--제약조건 추가
ALTER TABLE FLOWER ADD CONSTRAINT FLOWER_PK PRIMARY KEY (NAME);


--영화정보 테이블(제목, 감독, 배우, 개봉일)
CREATE TABLE MOVIE(
	TITLE  		VARCHAR2(100),
	DIRECTOR	VARCHAR2(30),
	ACTOR 		VARCHAR2(30),
	OPENINGDAT 	DATE
);
ALTER TABLE MOVIE RENAME COLUMN OPENINGDAT TO OPENINGDAY;
SELECT * FROM MOVIE;

--FK설정하기
CREATE TABLE TEST1(
	A NUMBER(3) PRIMARY KEY,
	B VARCHAR2(100)
);
CREATE TABLE TEST2(
	C NUMBER(3) PRIMARY KEY,
	D VARCHAR2(100),
	A NUMBER(3),
	CONSTRAINT TEST2_FK FOREIGN KEY(A) REFERENCES TEST1(A)
);

--수강신청 프로그램
--학생테이블 
--과목테이블
--신청목록테이블

--교수테이블
--학과테이블
--....

CREATE TABLE STUDENT(
	ID 		VARCHAR2(20),
	NAME 	VARCHAR2(30),
	MAJOR 	VARCHAR2(100),
	PHONE 	CHAR(11),		--컬럼 IN(값1, 값2,..): 값1, 값2,..에 존재하는 값이라면 참
	GENDER	CHAR(1) CHECK(GENDER IN ('M','W')),		--CHECK(조건식): 조건식이 참일 때만 데이터 삽입 
	CONSTRAINT STUDENT_PK PRIMARY KEY (ID)
);
CREATE TABLE SUBJECT(
	CODE 	 VARCHAR2(20) CONSTRAINT SUBJECT_PK PRIMARY KEY,
	NAME	 VARCHAR2(100),
	PROFNAME VARCHAR2(30)
);
CREATE TABLE LIST(
	LISTNUM NUMBER(4),
	ID 		VARCHAR2(20),
	CODE 	VARCHAR2(20),
	CONSTRAINT LIST_STUD_FK FOREIGN KEY(ID) REFERENCES STUDENT(ID),
	CONSTRAINT LIST_SUBJ_FK FOREIGN KEY(CODE) REFERENCES SUBJECT(CODE),
	CONSTRAINT LIST_PK PRIMARY KEY(LISTNUM)
);
DROP TABLE LIST;

--데이터 추가하기
INSERT INTO STUDENT(ID,NAME,MAJOR,PHONE,GENDER)
VALUES('apple','김사과','컴퓨터공학과','01011111111','M');
INSERT INTO STUDENT(ID,NAME,MAJOR,PHONE,GENDER)
VALUES('banana','반하나','기계공학과','01012341234','W');

SELECT * FROM STUDENT;
SELECT * FROM SUBJECT;

--데이터 수정하기
UPDATE STUDENT
SET PHONE='01099999999'
WHERE ID='banana'; 


--데이터 삭제하기
DELETE FROM STUDENT
WHERE ID='banana';	--LIST 테이블에서 'banana'라는 값을 FK로 받아오기 있기 때문에 삭제 불가능
--LIST 테이블에서 먼저 참조받는 데이터를 삭제해 주어야 삭제 가능하다.
DELETE FROM LIST
WHERE ID='banana';

--데이터 검색하기
SELECT ID FROM LIST
WHERE CODE='A001';


INSERT INTO SUBJECT(CODE,NAME,PROFNAME)
VALUES('A001','Java','정다솔');
INSERT INTO LIST(LISTNUM,ID,CODE)
VALUES(1,'apple','A001');
INSERT INTO LIST(LISTNUM,ID,CODE)
VALUES(2,'banana','A001');

SELECT * FROM LIST;
SELECT * FROM PLAYER;

--COMMIT: 저장(데이터의 수정을 실제로 적용)
--ROLLBACK: 되돌리기(데이터의 수정을 취소하고, 마지막으로 COMMIT했던 데이터로 돌아간다)

